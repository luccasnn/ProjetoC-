{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucca\\\\OneDrive\\\\Documentos\\\\Estudando.Net\\\\ProjetoCs\\\\ProjetoCompleto\\\\front-end\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [pessoas, setPessoas] = useState([]);\n  const [enderecos, setEnderecos] = useState([]);\n\n  // Estados Pessoa\n  const [nome, setNome] = useState(\"\");\n  const [idade, setIdade] = useState(\"\");\n  const [enderecoId, setEnderecoId] = useState(\"\");\n  const [editandoPessoaId, setEditandoPessoaId] = useState(null);\n\n  // Estados Endereço\n  const [rua, setRua] = useState(\"\");\n  const [cidade, setCidade] = useState(\"\");\n  const [estado, setEstado] = useState(\"\");\n  const [editandoEnderecoId, setEditandoEnderecoId] = useState(null);\n  const [view, setView] = useState(\"pessoas\");\n  const API_PESSOAS = \"http://localhost:5128/api/pessoas\";\n  const API_ENDERECOS = \"http://localhost:5128/api/enderecos\";\n  useEffect(() => {\n    fetchPessoas();\n    fetchEnderecos();\n  }, []);\n  const fetchPessoas = () => {\n    fetch(API_PESSOAS).then(res => res.json()).then(data => setPessoas(data)).catch(err => console.error(\"Erro ao buscar pessoas:\", err));\n  };\n  const fetchEnderecos = () => {\n    fetch(API_ENDERECOS).then(res => res.json()).then(data => setEnderecos(data)).catch(err => console.error(\"Erro ao buscar endereços:\", err));\n  };\n  const limparCamposPessoa = () => {\n    setNome(\"\");\n    setIdade(\"\");\n    setEnderecoId(\"\");\n    setEditandoPessoaId(null);\n  };\n\n  // Função para salvar edição de pessoa\n  const salvarEdicaoPessoa = () => {\n    if (editandoPessoaId === null) {\n      alert(\"Nenhuma pessoa selecionada para edição\");\n      return;\n    }\n    if (!nome.trim()) {\n      alert(\"Nome é obrigatório\");\n      return;\n    }\n    const idadeNum = Number(idade);\n    if (isNaN(idadeNum) || idadeNum <= 0) {\n      alert(\"Idade inválida\");\n      return;\n    }\n    const enderecoIdNum = Number(enderecoId);\n    if (isNaN(enderecoIdNum) || enderecoIdNum <= 0) {\n      alert(\"Endereço inválido\");\n      return;\n    }\n    const pessoaEditada = {\n      id: editandoPessoaId,\n      nome: nome.trim(),\n      idade: idadeNum,\n      enderecoId: enderecoIdNum\n    };\n    fetch(`${API_PESSOAS}/${editandoPessoaId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(pessoaEditada)\n    }).then(res => {\n      if (!res.ok) throw new Error(\"Erro ao editar pessoa\");\n      return res.json();\n    }).then(pessoaAtualizada => {\n      setPessoas(prevPessoas => prevPessoas.map(p => p.id === pessoaAtualizada.id ? pessoaAtualizada : p));\n      limparCamposPessoa();\n      setView(\"pessoas\");\n    }).catch(err => alert(err.message || \"Erro ao editar pessoa\"));\n  };\n\n  // Submit do formulário de pessoa - cria ou edita\n  const handleSubmitPessoa = e => {\n    e.preventDefault();\n    if (editandoPessoaId) {\n      salvarEdicaoPessoa();\n      return;\n    }\n    if (!nome.trim()) {\n      alert(\"Nome é obrigatório\");\n      return;\n    }\n    const idadeNum = Number(idade);\n    if (isNaN(idadeNum) || idadeNum <= 0) {\n      alert(\"Idade inválida\");\n      return;\n    }\n    const enderecoIdNum = Number(enderecoId);\n    if (isNaN(enderecoIdNum) || enderecoIdNum <= 0) {\n      alert(\"Endereço inválido\");\n      return;\n    }\n    const pessoaNova = {\n      nome: nome.trim(),\n      idade: idadeNum,\n      enderecoId: enderecoIdNum\n    };\n    fetch(API_PESSOAS, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(pessoaNova)\n    }).then(res => {\n      if (!res.ok) throw new Error(\"Erro ao cadastrar pessoa\");\n      return res.json();\n    }).then(data => {\n      setPessoas([...pessoas, data]);\n      limparCamposPessoa();\n    }).catch(() => alert(\"Erro ao cadastrar pessoa\"));\n  };\n\n  // const prepararEdicaoPessoa = (p: Pessoa) => {\n  //   setNome(p.nome);\n  //   setIdade(p.idade.toString());\n  //   setEnderecoId(p.enderecoId.toString());\n  //   setEditandoPessoaId(p.id);\n  //   setView(\"pessoas\");\n  // };\n  const prepararEdicaoPessoa = p => {\n    setNome(p.nome);\n    setIdade(p.idade.toString());\n    setEnderecoId(p.enderecoId != null ? p.enderecoId.toString() : \"\");\n    setEditandoPessoaId(p.id);\n    setView(\"pessoas\");\n  };\n  const handleDeletarPessoa = id => {\n    if (!window.confirm(\"Deseja realmente deletar esta pessoa?\")) return;\n    fetch(`${API_PESSOAS}/${id}`, {\n      method: \"DELETE\"\n    }).then(res => {\n      if (!res.ok) throw new Error(\"Erro ao deletar pessoa\");\n      return res.json();\n    }).then(() => setPessoas(pessoas.filter(p => p.id !== id))).catch(() => alert(\"Erro ao deletar pessoa\"));\n  };\n  const limparCamposEndereco = () => {\n    setRua(\"\");\n    setCidade(\"\");\n    setEstado(\"\");\n    setEditandoEnderecoId(null);\n  };\n  const handleSubmitEndereco = e => {\n    e.preventDefault();\n    const enderecoData = {\n      rua,\n      cidade,\n      estado\n    };\n    if (editandoEnderecoId) {\n      fetch(`${API_ENDERECOS}/${editandoEnderecoId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(enderecoData)\n      }).then(res => {\n        if (!res.ok) throw new Error(\"Erro ao atualizar endereço\");\n        return res.json();\n      }).then(() => {\n        fetchEnderecos();\n        limparCamposEndereco();\n      }).catch(() => alert(\"Erro ao atualizar endereço\"));\n    } else {\n      fetch(API_ENDERECOS, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(enderecoData)\n      }).then(res => {\n        if (!res.ok) throw new Error(\"Erro ao cadastrar endereço\");\n        return res.json();\n      }).then(data => {\n        setEnderecos([...enderecos, data]);\n        limparCamposEndereco();\n      }).catch(() => alert(\"Erro ao cadastrar endereço\"));\n    }\n  };\n  const prepararEdicaoEndereco = end => {\n    console.log(\"Endereço recebido:\", end);\n    setRua(end.rua);\n    setCidade(end.cidade);\n    setEstado(end.estado); // Confirme que aqui o valor está correto!\n    setEditandoEnderecoId(end.id);\n    setView(\"enderecos\");\n  };\n  const handleDeletarEndereco = id => {\n    if (!window.confirm(\"Deseja realmente deletar este endereço?\")) return;\n    fetch(`${API_ENDERECOS}/${id}`, {\n      method: \"DELETE\"\n    }).then(res => {\n      if (!res.ok) throw new Error(\"Erro ao deletar endereço\");\n      return res.json();\n    }).then(() => setEnderecos(enderecos.filter(e => e.id !== id))).catch(() => alert(\"Erro ao deletar endereço\"));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setView(\"pessoas\"),\n      children: \"Pessoas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setView(\"enderecos\"),\n      children: \"Endere\\xE7os\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), view === \"pessoas\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: editandoPessoaId ? \"Editar Pessoa\" : \"Cadastro de Pessoas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitPessoa,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: nome,\n          placeholder: \"Nome\",\n          onChange: e => setNome(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: idade,\n          placeholder: \"Idade\",\n          onChange: e => setIdade(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: enderecoId,\n          onChange: e => setEnderecoId(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecione o Endere\\xE7o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), enderecos.map(end => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: end.id,\n            children: [end.rua, \", \", end.cidade, \" - \", end.estado]\n          }, end.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: editandoPessoaId ? \"Salvar\" : \"Cadastrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), editandoPessoaId && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            limparCamposPessoa();\n          },\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lista de Pessoas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: pessoas.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [p.nome, \" (\", p.idade, \") - Endere\\xE7o ID: \", p.enderecoId, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => prepararEdicaoPessoa(p),\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeletarPessoa(p.id),\n            children: \"Excluir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this)]\n        }, p.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), view === \"enderecos\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: editandoEnderecoId ? \"Editar Endereço\" : \"Cadastro de Endereços\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitEndereco,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: rua,\n          placeholder: \"Rua\",\n          onChange: e => setRua(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: cidade,\n          placeholder: \"Cidade\",\n          onChange: e => setCidade(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: estado,\n          placeholder: \"Estado\",\n          onChange: e => setEstado(e.target.value.trim()),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: editandoEnderecoId ? \"Salvar\" : \"Cadastrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), editandoEnderecoId && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            limparCamposEndereco();\n          },\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lista de Endere\\xE7os\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: enderecos.map(end => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [end.rua, \", \", end.cidade, \" - \", end.estado, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => prepararEdicaoEndereco(end),\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeletarEndereco(end.id),\n            children: \"Excluir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 17\n          }, this)]\n        }, end.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Hdrtu9fzwPJGxznhwSxOQWta1RI=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","pessoas","setPessoas","enderecos","setEnderecos","nome","setNome","idade","setIdade","enderecoId","setEnderecoId","editandoPessoaId","setEditandoPessoaId","rua","setRua","cidade","setCidade","estado","setEstado","editandoEnderecoId","setEditandoEnderecoId","view","setView","API_PESSOAS","API_ENDERECOS","fetchPessoas","fetchEnderecos","fetch","then","res","json","data","catch","err","console","error","limparCamposPessoa","salvarEdicaoPessoa","alert","trim","idadeNum","Number","isNaN","enderecoIdNum","pessoaEditada","id","method","headers","body","JSON","stringify","ok","Error","pessoaAtualizada","prevPessoas","map","p","message","handleSubmitPessoa","e","preventDefault","pessoaNova","prepararEdicaoPessoa","toString","handleDeletarPessoa","window","confirm","filter","limparCamposEndereco","handleSubmitEndereco","enderecoData","prepararEdicaoEndereco","end","log","handleDeletarEndereco","style","padding","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","placeholder","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/lucca/OneDrive/Documentos/Estudando.Net/ProjetoCs/ProjetoCompleto/front-end/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\ntype Endereco = {\r\n  id: number;\r\n  rua: string;\r\n  cidade: string;\r\n  estado: string;\r\n};\r\n\r\ntype Pessoa = {\r\n  id: number;\r\n  nome: string;\r\n  idade: number;\r\n  enderecoId: number;\r\n  endereco?: Endereco;\r\n};\r\n\r\nexport default function App() {\r\n  const [pessoas, setPessoas] = useState<Pessoa[]>([]);\r\n  const [enderecos, setEnderecos] = useState<Endereco[]>([]);\r\n\r\n  // Estados Pessoa\r\n  const [nome, setNome] = useState(\"\");\r\n  const [idade, setIdade] = useState(\"\");\r\n  const [enderecoId, setEnderecoId] = useState(\"\");\r\n\r\n  const [editandoPessoaId, setEditandoPessoaId] = useState<number | null>(null);\r\n\r\n  // Estados Endereço\r\n  const [rua, setRua] = useState(\"\");\r\n  const [cidade, setCidade] = useState(\"\");\r\n  const [estado, setEstado] = useState(\"\");\r\n\r\n  const [editandoEnderecoId, setEditandoEnderecoId] = useState<number | null>(\r\n    null\r\n  );\r\n\r\n  const [view, setView] = useState<\"pessoas\" | \"enderecos\">(\"pessoas\");\r\n\r\n  const API_PESSOAS = \"http://localhost:5128/api/pessoas\";\r\n  const API_ENDERECOS = \"http://localhost:5128/api/enderecos\";\r\n\r\n  useEffect(() => {\r\n    fetchPessoas();\r\n    fetchEnderecos();\r\n  }, []);\r\n\r\n  const fetchPessoas = () => {\r\n    fetch(API_PESSOAS)\r\n      .then((res) => res.json())\r\n      .then((data) => setPessoas(data))\r\n      .catch((err) => console.error(\"Erro ao buscar pessoas:\", err));\r\n  };\r\n\r\n  const fetchEnderecos = () => {\r\n    fetch(API_ENDERECOS)\r\n      .then((res) => res.json())\r\n      .then((data) => setEnderecos(data))\r\n      .catch((err) => console.error(\"Erro ao buscar endereços:\", err));\r\n  };\r\n\r\n  const limparCamposPessoa = () => {\r\n    setNome(\"\");\r\n    setIdade(\"\");\r\n    setEnderecoId(\"\");\r\n    setEditandoPessoaId(null);\r\n  };\r\n\r\n  // Função para salvar edição de pessoa\r\n  const salvarEdicaoPessoa = () => {\r\n    if (editandoPessoaId === null) {\r\n      alert(\"Nenhuma pessoa selecionada para edição\");\r\n      return;\r\n    }\r\n\r\n    if (!nome.trim()) {\r\n      alert(\"Nome é obrigatório\");\r\n      return;\r\n    }\r\n\r\n    const idadeNum = Number(idade);\r\n    if (isNaN(idadeNum) || idadeNum <= 0) {\r\n      alert(\"Idade inválida\");\r\n      return;\r\n    }\r\n\r\n    const enderecoIdNum = Number(enderecoId);\r\n    if (isNaN(enderecoIdNum) || enderecoIdNum <= 0) {\r\n      alert(\"Endereço inválido\");\r\n      return;\r\n    }\r\n\r\n    const pessoaEditada = {\r\n      id: editandoPessoaId,\r\n      nome: nome.trim(),\r\n      idade: idadeNum,\r\n      enderecoId: enderecoIdNum,\r\n    };\r\n\r\n    fetch(`${API_PESSOAS}/${editandoPessoaId}`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(pessoaEditada),\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) throw new Error(\"Erro ao editar pessoa\");\r\n        return res.json();\r\n      })\r\n      .then((pessoaAtualizada: Pessoa) => {\r\n        setPessoas((prevPessoas) =>\r\n          prevPessoas.map((p) =>\r\n            p.id === pessoaAtualizada.id ? pessoaAtualizada : p\r\n          )\r\n        );\r\n        limparCamposPessoa();\r\n        setView(\"pessoas\");\r\n      })\r\n      .catch((err) => alert(err.message || \"Erro ao editar pessoa\"));\r\n  };\r\n\r\n  // Submit do formulário de pessoa - cria ou edita\r\n  const handleSubmitPessoa = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (editandoPessoaId) {\r\n      salvarEdicaoPessoa();\r\n      return;\r\n    }\r\n\r\n    if (!nome.trim()) {\r\n      alert(\"Nome é obrigatório\");\r\n      return;\r\n    }\r\n\r\n    const idadeNum = Number(idade);\r\n    if (isNaN(idadeNum) || idadeNum <= 0) {\r\n      alert(\"Idade inválida\");\r\n      return;\r\n    }\r\n\r\n    const enderecoIdNum = Number(enderecoId);\r\n    if (isNaN(enderecoIdNum) || enderecoIdNum <= 0) {\r\n      alert(\"Endereço inválido\");\r\n      return;\r\n    }\r\n\r\n    const pessoaNova = {\r\n      nome: nome.trim(),\r\n      idade: idadeNum,\r\n      enderecoId: enderecoIdNum,\r\n    };\r\n\r\n    fetch(API_PESSOAS, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(pessoaNova),\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) throw new Error(\"Erro ao cadastrar pessoa\");\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setPessoas([...pessoas, data]);\r\n        limparCamposPessoa();\r\n      })\r\n      .catch(() => alert(\"Erro ao cadastrar pessoa\"));\r\n  };\r\n\r\n  // const prepararEdicaoPessoa = (p: Pessoa) => {\r\n  //   setNome(p.nome);\r\n  //   setIdade(p.idade.toString());\r\n  //   setEnderecoId(p.enderecoId.toString());\r\n  //   setEditandoPessoaId(p.id);\r\n  //   setView(\"pessoas\");\r\n  // };\r\n  const prepararEdicaoPessoa = (p: Pessoa) => {\r\n    setNome(p.nome);\r\n    setIdade(p.idade.toString());\r\n    setEnderecoId(p.enderecoId != null ? p.enderecoId.toString() : \"\");\r\n    setEditandoPessoaId(p.id);\r\n    setView(\"pessoas\");\r\n  };\r\n\r\n  const handleDeletarPessoa = (id: number) => {\r\n    if (!window.confirm(\"Deseja realmente deletar esta pessoa?\")) return;\r\n\r\n    fetch(`${API_PESSOAS}/${id}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) throw new Error(\"Erro ao deletar pessoa\");\r\n        return res.json();\r\n      })\r\n      .then(() => setPessoas(pessoas.filter((p) => p.id !== id)))\r\n      .catch(() => alert(\"Erro ao deletar pessoa\"));\r\n  };\r\n\r\n  const limparCamposEndereco = () => {\r\n    setRua(\"\");\r\n    setCidade(\"\");\r\n    setEstado(\"\");\r\n    setEditandoEnderecoId(null);\r\n  };\r\n\r\n  const handleSubmitEndereco = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const enderecoData = { rua, cidade, estado };\r\n\r\n    if (editandoEnderecoId) {\r\n      fetch(`${API_ENDERECOS}/${editandoEnderecoId}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(enderecoData),\r\n      })\r\n        .then((res) => {\r\n          if (!res.ok) throw new Error(\"Erro ao atualizar endereço\");\r\n          return res.json();\r\n        })\r\n        .then(() => {\r\n          fetchEnderecos();\r\n          limparCamposEndereco();\r\n        })\r\n        .catch(() => alert(\"Erro ao atualizar endereço\"));\r\n    } else {\r\n      fetch(API_ENDERECOS, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(enderecoData),\r\n      })\r\n        .then((res) => {\r\n          if (!res.ok) throw new Error(\"Erro ao cadastrar endereço\");\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          setEnderecos([...enderecos, data]);\r\n          limparCamposEndereco();\r\n        })\r\n        .catch(() => alert(\"Erro ao cadastrar endereço\"));\r\n    }\r\n  };\r\n\r\n  const prepararEdicaoEndereco = (end: Endereco) => {\r\n    console.log(\"Endereço recebido:\", end);\r\n    setRua(end.rua);\r\n    setCidade(end.cidade);\r\n    setEstado(end.estado); // Confirme que aqui o valor está correto!\r\n    setEditandoEnderecoId(end.id);\r\n    setView(\"enderecos\");\r\n  };\r\n\r\n  const handleDeletarEndereco = (id: number) => {\r\n    if (!window.confirm(\"Deseja realmente deletar este endereço?\")) return;\r\n\r\n    fetch(`${API_ENDERECOS}/${id}`, { method: \"DELETE\" })\r\n      .then((res) => {\r\n        if (!res.ok) throw new Error(\"Erro ao deletar endereço\");\r\n        return res.json();\r\n      })\r\n      .then(() => setEnderecos(enderecos.filter((e) => e.id !== id)))\r\n      .catch(() => alert(\"Erro ao deletar endereço\"));\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <button onClick={() => setView(\"pessoas\")}>Pessoas</button>\r\n      <button onClick={() => setView(\"enderecos\")}>Endereços</button>\r\n\r\n      {view === \"pessoas\" && (\r\n        <>\r\n          <h1>{editandoPessoaId ? \"Editar Pessoa\" : \"Cadastro de Pessoas\"}</h1>\r\n          <form onSubmit={handleSubmitPessoa}>\r\n            <input\r\n              type=\"text\"\r\n              value={nome}\r\n              placeholder=\"Nome\"\r\n              onChange={(e) => setNome(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              value={idade}\r\n              placeholder=\"Idade\"\r\n              onChange={(e) => setIdade(e.target.value)}\r\n              required\r\n            />\r\n            <select\r\n              value={enderecoId}\r\n              onChange={(e) => setEnderecoId(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\">Selecione o Endereço</option>\r\n              {enderecos.map((end) => (\r\n                <option key={end.id} value={end.id}>\r\n                  {end.rua}, {end.cidade} - {end.estado}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <button type=\"submit\">\r\n              {editandoPessoaId ? \"Salvar\" : \"Cadastrar\"}\r\n            </button>\r\n            {editandoPessoaId && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  limparCamposPessoa();\r\n                }}\r\n              >\r\n                Cancelar\r\n              </button>\r\n            )}\r\n          </form>\r\n\r\n          <h2>Lista de Pessoas</h2>\r\n          <ul>\r\n            {pessoas.map((p) => (\r\n              <li key={p.id}>\r\n                {p.nome} ({p.idade}) - Endereço ID: {p.enderecoId}{\" \"}\r\n                <button onClick={() => prepararEdicaoPessoa(p)}>Editar</button>{\" \"}\r\n                <button onClick={() => handleDeletarPessoa(p.id)}>\r\n                  Excluir\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n\r\n      {view === \"enderecos\" && (\r\n        <>\r\n          <h1>\r\n            {editandoEnderecoId ? \"Editar Endereço\" : \"Cadastro de Endereços\"}\r\n          </h1>\r\n          <form onSubmit={handleSubmitEndereco}>\r\n            <input\r\n              type=\"text\"\r\n              value={rua}\r\n              placeholder=\"Rua\"\r\n              onChange={(e) => setRua(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              value={cidade}\r\n              placeholder=\"Cidade\"\r\n              onChange={(e) => setCidade(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              value={estado}\r\n              placeholder=\"Estado\"\r\n              onChange={(e) => setEstado(e.target.value.trim())}\r\n              required\r\n            />\r\n            <button type=\"submit\">\r\n              {editandoEnderecoId ? \"Salvar\" : \"Cadastrar\"}\r\n            </button>\r\n            {editandoEnderecoId && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  limparCamposEndereco();\r\n                }}\r\n              >\r\n                Cancelar\r\n              </button>\r\n            )}\r\n          </form>\r\n\r\n          <h2>Lista de Endereços</h2>\r\n          <ul>\r\n            {enderecos.map((end) => (\r\n              <li key={end.id}>\r\n                {end.rua}, {end.cidade} - {end.estado}{\" \"}\r\n                <button onClick={() => prepararEdicaoEndereco(end)}>\r\n                  Editar\r\n                </button>{\" \"}\r\n                <button onClick={() => handleDeletarEndereco(end.id)}>\r\n                  Excluir\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
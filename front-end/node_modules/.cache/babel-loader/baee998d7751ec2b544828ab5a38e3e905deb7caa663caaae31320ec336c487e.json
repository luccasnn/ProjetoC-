{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucca\\\\OneDrive\\\\Documentos\\\\Estudando.Net\\\\ProjetoCs\\\\ProjetoCompleto\\\\front-end\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [pessoas, setPessoas] = useState([]);\n  const [enderecos, setEnderecos] = useState([]);\n\n  // Estados Pessoa\n  const [nome, setNome] = useState(\"\");\n  const [idade, setIdade] = useState(\"\");\n  const [enderecoId, setEnderecoId] = useState(\"\");\n  const [editandoPessoaId, setEditandoPessoaId] = useState(null);\n\n  // Estados Endereço\n  const [rua, setRua] = useState(\"\");\n  const [cidade, setCidade] = useState(\"\");\n  const [estado, setEstado] = useState(\"\");\n  const [editandoEnderecoId, setEditandoEnderecoId] = useState(null);\n  const [view, setView] = useState(\"pessoas\");\n  const API_PESSOAS = \"http://localhost:5128/api/pessoas\";\n  const API_ENDERECOS = \"http://localhost:5128/api/enderecos\";\n  useEffect(() => {\n    fetchPessoas();\n    fetchEnderecos();\n  }, []);\n  const fetchPessoas = () => {\n    fetch(API_PESSOAS).then(res => res.json()).then(setPessoas).catch(err => console.error(\"Erro ao buscar pessoas:\", err));\n  };\n  const fetchEnderecos = () => {\n    fetch(API_ENDERECOS).then(res => res.json()).then(setEnderecos).catch(err => console.error(\"Erro ao buscar endereços:\", err));\n  };\n  const limparCamposPessoa = () => {\n    setNome(\"\");\n    setIdade(\"\");\n    setEnderecoId(\"\");\n    setEditandoPessoaId(null);\n  };\n  const salvarEdicaoPessoa = () => {\n    if (editandoPessoaId === null) {\n      alert(\"Nenhuma pessoa selecionada para edição\");\n      return;\n    }\n    if (!nome.trim()) {\n      alert(\"Nome é obrigatório\");\n      return;\n    }\n    const idadeNum = Number(idade);\n    if (isNaN(idadeNum) || idadeNum <= 0) {\n      alert(\"Idade inválida\");\n      return;\n    }\n    const enderecoIdNum = Number(enderecoId);\n    if (isNaN(enderecoIdNum) || enderecoIdNum <= 0) {\n      alert(\"Endereço inválido\");\n      return;\n    }\n    const pessoaEditada = {\n      id: editandoPessoaId,\n      nome: nome.trim(),\n      idade: idadeNum,\n      enderecoId: enderecoIdNum\n    };\n    fetch(`${API_PESSOAS}/${editandoPessoaId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(pessoaEditada)\n    }).then(res => {\n      if (!res.ok) throw new Error(\"Erro ao editar pessoa\");\n      return res.json();\n    }).then(pessoaAtualizada => {\n      setPessoas(prev => prev.map(p => p.id === pessoaAtualizada.id ? pessoaAtualizada : p));\n      limparCamposPessoa();\n      setView(\"pessoas\");\n    }).catch(err => alert(err.message || \"Erro ao editar pessoa\"));\n  };\n  const handleSubmitPessoa = e => {\n    e.preventDefault();\n    if (editandoPessoaId !== null) {\n      salvarEdicaoPessoa();\n      return;\n    }\n    if (!nome.trim()) {\n      alert(\"Nome é obrigatório\");\n      return;\n    }\n    const idadeNum = Number(idade);\n    if (isNaN(idadeNum) || idadeNum <= 0) {\n      alert(\"Idade inválida\");\n      return;\n    }\n    const enderecoIdNum = Number(enderecoId);\n    if (isNaN(enderecoIdNum) || enderecoIdNum <= 0) {\n      alert(\"Endereço inválido\");\n      return;\n    }\n    const pessoaNova = {\n      nome: nome.trim(),\n      idade: idadeNum,\n      enderecoId: enderecoIdNum\n    };\n    fetch(API_PESSOAS, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(pessoaNova)\n    }).then(res => {\n      if (!res.ok) throw new Error(\"Erro ao cadastrar pessoa\");\n      return res.json();\n    }).then(data => {\n      setPessoas(prev => [...prev, data]);\n      limparCamposPessoa();\n    }).catch(() => alert(\"Erro ao cadastrar pessoa\"));\n  };\n  const prepararEdicaoPessoa = p => {\n    setNome(p.nome);\n    setIdade(p.idade.toString());\n    setEnderecoId(p.enderecoId.toString());\n    setEditandoPessoaId(p.id);\n    setView(\"pessoas\");\n  };\n  const handleDeletarPessoa = id => {\n    if (!window.confirm(\"Deseja realmente deletar esta pessoa?\")) return;\n    fetch(`${API_PESSOAS}/${id}`, {\n      method: \"DELETE\"\n    }).then(res => {\n      if (!res.ok) throw new Error(\"Erro ao deletar pessoa\");\n      return res.json();\n    }).then(() => setPessoas(prev => prev.filter(p => p.id !== id))).catch(() => alert(\"Erro ao deletar pessoa\"));\n  };\n  const limparCamposEndereco = () => {\n    setRua(\"\");\n    setCidade(\"\");\n    setEstado(\"\");\n    setEditandoEnderecoId(null);\n  };\n  const handleSubmitEndereco = e => {\n    e.preventDefault();\n    if (!rua.trim() || !cidade.trim() || !estado.trim()) {\n      alert(\"Todos os campos do endereço são obrigatórios\");\n      return;\n    }\n    const enderecoData = {\n      rua: rua.trim(),\n      cidade: cidade.trim(),\n      estado: estado.trim()\n    };\n    if (editandoEnderecoId !== null) {\n      fetch(`${API_ENDERECOS}/${editandoEnderecoId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(enderecoData)\n      }).then(res => {\n        if (!res.ok) throw new Error(\"Erro ao atualizar endereço\");\n        return res.json();\n      }).then(() => {\n        fetchEnderecos();\n        limparCamposEndereco();\n      }).catch(() => alert(\"Erro ao atualizar endereço\"));\n    } else {\n      fetch(API_ENDERECOS, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(enderecoData)\n      }).then(res => {\n        if (!res.ok) throw new Error(\"Erro ao cadastrar endereço\");\n        return res.json();\n      }).then(data => {\n        setEnderecos(prev => [...prev, data]);\n        limparCamposEndereco();\n      }).catch(() => alert(\"Erro ao cadastrar endereço\"));\n    }\n  };\n  const prepararEdicaoEndereco = end => {\n    setRua(end.rua);\n    setCidade(end.cidade);\n    setEstado(end.estado);\n    setEditandoEnderecoId(end.id);\n    setView(\"enderecos\");\n  };\n  const handleDeletarEndereco = id => {\n    if (!window.confirm(\"Deseja realmente deletar este endereço?\")) return;\n    fetch(`${API_ENDERECOS}/${id}`, {\n      method: \"DELETE\"\n    }).then(res => {\n      if (!res.ok) throw new Error(\"Erro ao deletar endereço\");\n      return res.json();\n    }).then(() => setEnderecos(prev => prev.filter(e => e.id !== id))).catch(() => alert(\"Erro ao deletar endereço\"));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setView(\"pessoas\"),\n      children: \"Pessoas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setView(\"enderecos\"),\n      children: \"Endere\\xE7os\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), view === \"pessoas\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: editandoPessoaId !== null ? \"Editar Pessoa\" : \"Cadastro de Pessoas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitPessoa,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: nome,\n          placeholder: \"Nome\",\n          onChange: e => setNome(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: idade,\n          placeholder: \"Idade\",\n          onChange: e => setIdade(e.target.value),\n          required: true,\n          min: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: enderecoId,\n          onChange: e => setEnderecoId(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecione o Endere\\xE7o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this), enderecos.map(end => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: end.id,\n            children: [end.rua, \", \", end.cidade, \" - \", end.estado]\n          }, end.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: editandoPessoaId !== null ? \"Salvar\" : \"Cadastrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), editandoPessoaId !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: limparCamposPessoa,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lista de Pessoas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: pessoas.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [p.nome, \" (\", p.idade, \") - Endere\\xE7o ID: \", p.enderecoId, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => prepararEdicaoPessoa(p),\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeletarPessoa(p.id),\n            children: \"Excluir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this)]\n        }, p.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), view === \"enderecos\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: editandoEnderecoId !== null ? \"Editar Endereço\" : \"Cadastro de Endereços\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitEndereco,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: rua,\n          placeholder: \"Rua\",\n          onChange: e => setRua(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: cidade,\n          placeholder: \"Cidade\",\n          onChange: e => setCidade(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: estado,\n          placeholder: \"Estado\",\n          onChange: e => setEstado(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: editandoEnderecoId !== null ? \"Salvar\" : \"Cadastrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), editandoEnderecoId !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: limparCamposEndereco,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lista de Endere\\xE7os\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: enderecos.map(end => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [end.rua, \", \", end.cidade, \" - \", end.estado, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => prepararEdicaoEndereco(end),\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeletarEndereco(end.id),\n            children: \"Excluir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 17\n          }, this)]\n        }, end.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Hdrtu9fzwPJGxznhwSxOQWta1RI=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","pessoas","setPessoas","enderecos","setEnderecos","nome","setNome","idade","setIdade","enderecoId","setEnderecoId","editandoPessoaId","setEditandoPessoaId","rua","setRua","cidade","setCidade","estado","setEstado","editandoEnderecoId","setEditandoEnderecoId","view","setView","API_PESSOAS","API_ENDERECOS","fetchPessoas","fetchEnderecos","fetch","then","res","json","catch","err","console","error","limparCamposPessoa","salvarEdicaoPessoa","alert","trim","idadeNum","Number","isNaN","enderecoIdNum","pessoaEditada","id","method","headers","body","JSON","stringify","ok","Error","pessoaAtualizada","prev","map","p","message","handleSubmitPessoa","e","preventDefault","pessoaNova","data","prepararEdicaoPessoa","toString","handleDeletarPessoa","window","confirm","filter","limparCamposEndereco","handleSubmitEndereco","enderecoData","prepararEdicaoEndereco","end","handleDeletarEndereco","style","padding","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","placeholder","onChange","target","required","min","_c","$RefreshReg$"],"sources":["C:/Users/lucca/OneDrive/Documentos/Estudando.Net/ProjetoCs/ProjetoCompleto/front-end/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\ntype Endereco = {\r\n  id: number;\r\n  rua: string;\r\n  cidade: string;\r\n  estado: string;\r\n};\r\n\r\ntype Pessoa = {\r\n  id: number;\r\n  nome: string;\r\n  idade: number;\r\n  enderecoId: number;\r\n  endereco?: Endereco;\r\n};\r\n\r\nexport default function App() {\r\n  const [pessoas, setPessoas] = useState<Pessoa[]>([]);\r\n  const [enderecos, setEnderecos] = useState<Endereco[]>([]);\r\n\r\n  // Estados Pessoa\r\n  const [nome, setNome] = useState(\"\");\r\n  const [idade, setIdade] = useState(\"\");\r\n  const [enderecoId, setEnderecoId] = useState(\"\");\r\n\r\n  const [editandoPessoaId, setEditandoPessoaId] = useState<number | null>(null);\r\n\r\n  // Estados Endereço\r\n  const [rua, setRua] = useState(\"\");\r\n  const [cidade, setCidade] = useState(\"\");\r\n  const [estado, setEstado] = useState(\"\");\r\n\r\n  const [editandoEnderecoId, setEditandoEnderecoId] = useState<number | null>(\r\n    null\r\n  );\r\n\r\n  const [view, setView] = useState<\"pessoas\" | \"enderecos\">(\"pessoas\");\r\n\r\n  const API_PESSOAS = \"http://localhost:5128/api/pessoas\";\r\n  const API_ENDERECOS = \"http://localhost:5128/api/enderecos\";\r\n\r\n  useEffect(() => {\r\n    fetchPessoas();\r\n    fetchEnderecos();\r\n  }, []);\r\n\r\n  const fetchPessoas = () => {\r\n    fetch(API_PESSOAS)\r\n      .then((res) => res.json())\r\n      .then(setPessoas)\r\n      .catch((err) => console.error(\"Erro ao buscar pessoas:\", err));\r\n  };\r\n\r\n  const fetchEnderecos = () => {\r\n    fetch(API_ENDERECOS)\r\n      .then((res) => res.json())\r\n      .then(setEnderecos)\r\n      .catch((err) => console.error(\"Erro ao buscar endereços:\", err));\r\n  };\r\n\r\n  const limparCamposPessoa = () => {\r\n    setNome(\"\");\r\n    setIdade(\"\");\r\n    setEnderecoId(\"\");\r\n    setEditandoPessoaId(null);\r\n  };\r\n\r\n  const salvarEdicaoPessoa = () => {\r\n    if (editandoPessoaId === null) {\r\n      alert(\"Nenhuma pessoa selecionada para edição\");\r\n      return;\r\n    }\r\n\r\n    if (!nome.trim()) {\r\n      alert(\"Nome é obrigatório\");\r\n      return;\r\n    }\r\n\r\n    const idadeNum = Number(idade);\r\n    if (isNaN(idadeNum) || idadeNum <= 0) {\r\n      alert(\"Idade inválida\");\r\n      return;\r\n    }\r\n\r\n    const enderecoIdNum = Number(enderecoId);\r\n    if (isNaN(enderecoIdNum) || enderecoIdNum <= 0) {\r\n      alert(\"Endereço inválido\");\r\n      return;\r\n    }\r\n\r\n    const pessoaEditada = {\r\n      id: editandoPessoaId,\r\n      nome: nome.trim(),\r\n      idade: idadeNum,\r\n      enderecoId: enderecoIdNum,\r\n    };\r\n\r\n    fetch(`${API_PESSOAS}/${editandoPessoaId}`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(pessoaEditada),\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) throw new Error(\"Erro ao editar pessoa\");\r\n        return res.json();\r\n      })\r\n      .then((pessoaAtualizada: Pessoa) => {\r\n        setPessoas((prev) =>\r\n          prev.map((p) => (p.id === pessoaAtualizada.id ? pessoaAtualizada : p))\r\n        );\r\n        limparCamposPessoa();\r\n        setView(\"pessoas\");\r\n      })\r\n      .catch((err) => alert(err.message || \"Erro ao editar pessoa\"));\r\n  };\r\n\r\n  const handleSubmitPessoa = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (editandoPessoaId !== null) {\r\n      salvarEdicaoPessoa();\r\n      return;\r\n    }\r\n\r\n    if (!nome.trim()) {\r\n      alert(\"Nome é obrigatório\");\r\n      return;\r\n    }\r\n\r\n    const idadeNum = Number(idade);\r\n    if (isNaN(idadeNum) || idadeNum <= 0) {\r\n      alert(\"Idade inválida\");\r\n      return;\r\n    }\r\n\r\n    const enderecoIdNum = Number(enderecoId);\r\n    if (isNaN(enderecoIdNum) || enderecoIdNum <= 0) {\r\n      alert(\"Endereço inválido\");\r\n      return;\r\n    }\r\n\r\n    const pessoaNova = {\r\n      nome: nome.trim(),\r\n      idade: idadeNum,\r\n      enderecoId: enderecoIdNum,\r\n    };\r\n\r\n    fetch(API_PESSOAS, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(pessoaNova),\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) throw new Error(\"Erro ao cadastrar pessoa\");\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setPessoas((prev) => [...prev, data]);\r\n        limparCamposPessoa();\r\n      })\r\n      .catch(() => alert(\"Erro ao cadastrar pessoa\"));\r\n  };\r\n\r\n  const prepararEdicaoPessoa = (p: Pessoa) => {\r\n    setNome(p.nome);\r\n    setIdade(p.idade.toString());\r\n    setEnderecoId(p.enderecoId.toString());\r\n    setEditandoPessoaId(p.id);\r\n    setView(\"pessoas\");\r\n  };\r\n\r\n  const handleDeletarPessoa = (id: number) => {\r\n    if (!window.confirm(\"Deseja realmente deletar esta pessoa?\")) return;\r\n\r\n    fetch(`${API_PESSOAS}/${id}`, { method: \"DELETE\" })\r\n      .then((res) => {\r\n        if (!res.ok) throw new Error(\"Erro ao deletar pessoa\");\r\n        return res.json();\r\n      })\r\n      .then(() => setPessoas((prev) => prev.filter((p) => p.id !== id)))\r\n      .catch(() => alert(\"Erro ao deletar pessoa\"));\r\n  };\r\n\r\n  const limparCamposEndereco = () => {\r\n    setRua(\"\");\r\n    setCidade(\"\");\r\n    setEstado(\"\");\r\n    setEditandoEnderecoId(null);\r\n  };\r\n\r\n  const handleSubmitEndereco = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!rua.trim() || !cidade.trim() || !estado.trim()) {\r\n      alert(\"Todos os campos do endereço são obrigatórios\");\r\n      return;\r\n    }\r\n\r\n    const enderecoData = {\r\n      rua: rua.trim(),\r\n      cidade: cidade.trim(),\r\n      estado: estado.trim(),\r\n    };\r\n\r\n    if (editandoEnderecoId !== null) {\r\n      fetch(`${API_ENDERECOS}/${editandoEnderecoId}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(enderecoData),\r\n      })\r\n        .then((res) => {\r\n          if (!res.ok) throw new Error(\"Erro ao atualizar endereço\");\r\n          return res.json();\r\n        })\r\n        .then(() => {\r\n          fetchEnderecos();\r\n          limparCamposEndereco();\r\n        })\r\n        .catch(() => alert(\"Erro ao atualizar endereço\"));\r\n    } else {\r\n      fetch(API_ENDERECOS, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(enderecoData),\r\n      })\r\n        .then((res) => {\r\n          if (!res.ok) throw new Error(\"Erro ao cadastrar endereço\");\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          setEnderecos((prev) => [...prev, data]);\r\n          limparCamposEndereco();\r\n        })\r\n        .catch(() => alert(\"Erro ao cadastrar endereço\"));\r\n    }\r\n  };\r\n\r\n  const prepararEdicaoEndereco = (end: Endereco) => {\r\n    setRua(end.rua);\r\n    setCidade(end.cidade);\r\n    setEstado(end.estado);\r\n    setEditandoEnderecoId(end.id);\r\n    setView(\"enderecos\");\r\n  };\r\n\r\n  const handleDeletarEndereco = (id: number) => {\r\n    if (!window.confirm(\"Deseja realmente deletar este endereço?\")) return;\r\n\r\n    fetch(`${API_ENDERECOS}/${id}`, { method: \"DELETE\" })\r\n      .then((res) => {\r\n        if (!res.ok) throw new Error(\"Erro ao deletar endereço\");\r\n        return res.json();\r\n      })\r\n      .then(() => setEnderecos((prev) => prev.filter((e) => e.id !== id)))\r\n      .catch(() => alert(\"Erro ao deletar endereço\"));\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <button onClick={() => setView(\"pessoas\")}>Pessoas</button>\r\n      <button onClick={() => setView(\"enderecos\")}>Endereços</button>\r\n\r\n      {view === \"pessoas\" && (\r\n        <>\r\n          <h1>\r\n            {editandoPessoaId !== null\r\n              ? \"Editar Pessoa\"\r\n              : \"Cadastro de Pessoas\"}\r\n          </h1>\r\n          <form onSubmit={handleSubmitPessoa}>\r\n            <input\r\n              type=\"text\"\r\n              value={nome}\r\n              placeholder=\"Nome\"\r\n              onChange={(e) => setNome(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              value={idade}\r\n              placeholder=\"Idade\"\r\n              onChange={(e) => setIdade(e.target.value)}\r\n              required\r\n              min={1}\r\n            />\r\n            <select\r\n              value={enderecoId}\r\n              onChange={(e) => setEnderecoId(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\">Selecione o Endereço</option>\r\n              {enderecos.map((end) => (\r\n                <option key={end.id} value={end.id}>\r\n                  {end.rua}, {end.cidade} - {end.estado}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <button type=\"submit\">\r\n              {editandoPessoaId !== null ? \"Salvar\" : \"Cadastrar\"}\r\n            </button>\r\n            {editandoPessoaId !== null && (\r\n              <button type=\"button\" onClick={limparCamposPessoa}>\r\n                Cancelar\r\n              </button>\r\n            )}\r\n          </form>\r\n\r\n          <h2>Lista de Pessoas</h2>\r\n          <ul>\r\n            {pessoas.map((p) => (\r\n              <li key={p.id}>\r\n                {p.nome} ({p.idade}) - Endereço ID: {p.enderecoId}{\" \"}\r\n                <button onClick={() => prepararEdicaoPessoa(p)}>Editar</button>{\" \"}\r\n                <button onClick={() => handleDeletarPessoa(p.id)}>\r\n                  Excluir\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n\r\n      {view === \"enderecos\" && (\r\n        <>\r\n          <h1>\r\n            {editandoEnderecoId !== null\r\n              ? \"Editar Endereço\"\r\n              : \"Cadastro de Endereços\"}\r\n          </h1>\r\n          <form onSubmit={handleSubmitEndereco}>\r\n            <input\r\n              type=\"text\"\r\n              value={rua}\r\n              placeholder=\"Rua\"\r\n              onChange={(e) => setRua(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              value={cidade}\r\n              placeholder=\"Cidade\"\r\n              onChange={(e) => setCidade(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              value={estado}\r\n              placeholder=\"Estado\"\r\n              onChange={(e) => setEstado(e.target.value)}\r\n              required\r\n            />\r\n            <button type=\"submit\">\r\n              {editandoEnderecoId !== null ? \"Salvar\" : \"Cadastrar\"}\r\n            </button>\r\n            {editandoEnderecoId !== null && (\r\n              <button type=\"button\" onClick={limparCamposEndereco}>\r\n                Cancelar\r\n              </button>\r\n            )}\r\n          </form>\r\n\r\n          <h2>Lista de Endereços</h2>\r\n          <ul>\r\n            {enderecos.map((end) => (\r\n              <li key={end.id}>\r\n                {end.rua}, {end.cidade} - {end.estado}{\" \"}\r\n                <button onClick={() => prepararEdicaoEndereco(end)}>\r\n                  Editar\r\n                </button>{\" \"}\r\n                <button onClick={() => handleDeletarEndereco(end.id)}>\r\n                  Excluir\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}